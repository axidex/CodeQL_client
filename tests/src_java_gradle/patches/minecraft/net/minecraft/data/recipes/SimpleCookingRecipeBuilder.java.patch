--- a/net/minecraft/data/recipes/SimpleCookingRecipeBuilder.java
+++ b/net/minecraft/data/recipes/SimpleCookingRecipeBuilder.java
@@ -80,7 +_,14 @@
       this.ensureValid(p_126264_);
       Advancement.Builder advancement$builder = p_299448_.advancement().addCriterion("has_the_recipe", RecipeUnlockedTrigger.unlocked(p_126264_)).rewards(AdvancementRewards.Builder.recipe(p_126264_)).requirements(AdvancementRequirements.Strategy.OR);
       this.criteria.forEach(advancement$builder::addCriterion);
-      p_299448_.accept(new SimpleCookingRecipeBuilder.Result(p_126264_, this.group == null ? "" : this.group, this.bookCategory, this.ingredient, this.result, this.experience, this.cookingTime, advancement$builder.build(p_126264_.withPrefix("recipes/" + this.category.getFolderName() + "/")), this.serializer));
+      p_299448_.accept(new SimpleCookingRecipeBuilder.Result(p_126264_, this.group == null ? "" : this.group, this.bookCategory, this.ingredient, this.result, this.experience, this.cookingTime, advancement$builder.build(p_126264_.withPrefix("recipes/" + this.category.getFolderName() + "/")), this.serializer, this.condition));
+   }
+
+   @Nullable
+   private net.minecraftforge.common.crafting.conditions.ICondition condition;
+   public SimpleCookingRecipeBuilder condition(net.minecraftforge.common.crafting.conditions.ICondition condition) {
+       this.condition = condition;
+       return this;
    }
 
    private static CookingBookCategory determineSmeltingRecipeCategory(ItemLike p_251938_) {
@@ -113,8 +_,13 @@
       }
    }
 
-   static record Result(ResourceLocation id, String group, CookingBookCategory category, Ingredient ingredient, Item result, float experience, int cookingTime, AdvancementHolder advancement, RecipeSerializer<? extends AbstractCookingRecipe> type) implements FinishedRecipe {
+   static record Result(ResourceLocation id, String group, CookingBookCategory category, Ingredient ingredient, Item result, float experience, int cookingTime, AdvancementHolder advancement, RecipeSerializer<? extends AbstractCookingRecipe> type, net.minecraftforge.common.crafting.conditions.ICondition condition) implements FinishedRecipe {
+      public Result(ResourceLocation id, String group, CookingBookCategory category, Ingredient ingredient, Item result, float experience, int cookingTime, AdvancementHolder advancement, RecipeSerializer<? extends AbstractCookingRecipe> type) {
+          this(id, group, category, ingredient, result, experience, cookingTime, advancement, type, null);
+      }
+
       public void serializeRecipeData(JsonObject p_126297_) {
+         net.minecraftforge.common.ForgeHooks.writeCondition(this.condition, p_126297_);
          if (!this.group.isEmpty()) {
             p_126297_.addProperty("group", this.group);
          }
