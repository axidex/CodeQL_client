--- a/net/minecraft/data/recipes/SingleItemRecipeBuilder.java
+++ b/net/minecraft/data/recipes/SingleItemRecipeBuilder.java
@@ -61,7 +_,14 @@
       this.ensureValid(p_126328_);
       Advancement.Builder advancement$builder = p_298439_.advancement().addCriterion("has_the_recipe", RecipeUnlockedTrigger.unlocked(p_126328_)).rewards(AdvancementRewards.Builder.recipe(p_126328_)).requirements(AdvancementRequirements.Strategy.OR);
       this.criteria.forEach(advancement$builder::addCriterion);
-      p_298439_.accept(new SingleItemRecipeBuilder.Result(p_126328_, this.type, this.group == null ? "" : this.group, this.ingredient, this.result, this.count, advancement$builder.build(p_126328_.withPrefix("recipes/" + this.category.getFolderName() + "/"))));
+      p_298439_.accept(new SingleItemRecipeBuilder.Result(p_126328_, this.type, this.group == null ? "" : this.group, this.ingredient, this.result, this.count, advancement$builder.build(p_126328_.withPrefix("recipes/" + this.category.getFolderName() + "/")), condition));
+   }
+
+   @Nullable
+   private net.minecraftforge.common.crafting.conditions.ICondition condition;
+   public SingleItemRecipeBuilder condition(net.minecraftforge.common.crafting.conditions.ICondition condition) {
+       this.condition = condition;
+       return this;
    }
 
    private void ensureValid(ResourceLocation p_126330_) {
@@ -70,8 +_,13 @@
       }
    }
 
-   public static record Result(ResourceLocation id, RecipeSerializer<?> type, String group, Ingredient ingredient, Item result, int count, AdvancementHolder advancement) implements FinishedRecipe {
+   public static record Result(ResourceLocation id, RecipeSerializer<?> type, String group, Ingredient ingredient, Item result, int count, AdvancementHolder advancement, net.minecraftforge.common.crafting.conditions.ICondition condition) implements FinishedRecipe {
+      Result(ResourceLocation id, RecipeSerializer<?> type, String group, Ingredient ingredient, Item result, int count, AdvancementHolder advancement) {
+        this(id, type, group, ingredient, result, count, advancement, null);
+      }
+
       public void serializeRecipeData(JsonObject p_126349_) {
+         net.minecraftforge.common.ForgeHooks.writeCondition(this.condition, p_126349_);
          if (!this.group.isEmpty()) {
             p_126349_.addProperty("group", this.group);
          }
